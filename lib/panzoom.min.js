/*! Minimal pan-zoom (pointer events) */(function(g){function P(el,o){this.el=el;this.o=o||{};this.scale=1;this.minScale=this.o.minScale||1;this.maxScale=this.o.maxScale||5;this.x=0;this.y=0;this.ps=new Map();this.ld=0;this._b();this._u()}P.prototype._b=function(){const e=this.el;e.style.touchAction='none';e.addEventListener('pointerdown',this._d.bind(this));e.addEventListener('pointermove',this._m.bind(this));window.addEventListener('pointerup',this._uP.bind(this));e.addEventListener('wheel',this._w.bind(this),{passive:false})};P.prototype._d=function(e){this.el.setPointerCapture(e.pointerId);this.ps.set(e.pointerId,{x:e.clientX,y:e.clientY});this.sx=this.x;this.sy=this.y;this.ss=this.scale;this.scx=e.clientX;this.scy=e.clientY};P.prototype._m=function(e){if(!this.ps.has(e.pointerId))return;this.ps.set(e.pointerId,{x:e.clientX,y:e.clientY});if(this.ps.size===1){const dx=e.clientX-this.scx,dy=e.clientY-this.scy;this.x=this.sx+dx;this.y=this.sy+dy;this._u()}else if(this.ps.size===2){const pts=Array.from(this.ps.values());const dx=pts[0].x-pts[1].x,dy=pts[0].y-pts[1].y;const d=Math.hypot(dx,dy);if(this.ld===0)this.ld=d;const f=d/this.ld;this.scale=Math.min(this.maxScale,Math.max(this.minScale,this.scale*f));this.ld=d;this._u()}};P.prototype._uP=function(e){if(this.ps.has(e.pointerId))this.ps.delete(e.pointerId);if(this.ps.size<2)this.ld=0};P.prototype._w=function(e){e.preventDefault();const d=Math.sign(e.deltaY);const f=(d<0)?1.1:0.9;this.scale=Math.min(this.maxScale,Math.max(this.minScale,this.scale*f));this._u()};P.prototype._u=function(){this.el.style.transform=`translate(${this.x}px, ${this.y}px) scale(${this.scale})`};g.PanZoom=P})(window);